{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/menu/menu.component.css","webpack:///./src/app/menu/menu.component.html","webpack:///./src/app/menu/menu.component.ts","webpack:///./src/app/svg-cards/svg-cards.component.html","webpack:///./src/app/svg-cards/svg-cards.component.ts","webpack:///./src/app/svg-cards/svg-cards.module.ts","webpack:///./src/app/svg-deck/svg-deck.component.html","webpack:///./src/app/svg-deck/svg-deck.component.ts","webpack:///./src/app/svg-deck/svg-deck.module.ts","webpack:///./src/app/svg-deck/svg-deck.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-menu></app-menu>\\n<svg-deck [fill]=\\\"'darkred'\\\" [deckSize]=\\\"'10'\\\"></svg-deck>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  ngOnInit() {\n}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { DeckModule } from './svg-deck/svg-deck.module';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { MenuComponent } from './menu/menu.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MenuComponent\n  ],\n  imports: [\n    BrowserModule,\n    DeckModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class='row'>\\n  <nav class=\\\"col navbar navbar-dark bg-dark rounded shadow p-3 text-center\\\">\\n    <h2 class='text-white ml-4'>SVG CARDS</h2>\\n         \\n  </nav>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div style='display:inline-block;' class='m-1 rounded' [attr.height]=\\\"height\\\" [attr.width]=\\\"width\\\">\\n    <div class='svgcard' (click)='toggleState()' [@flipState]='state'>\\n        <div class='back shadow-lg rounded-circle'>\\n            <svg [attr.height]=\\\"height\\\" [attr.width]=\\\"width\\\" viewBox=\\\"0 0 169.075 244.640\\\">\\n                <use [attr.href]=\\\"'assets/svg-cards-indented.svg#' + back\\\" [attr.fill]='fill' />\\n            </svg>\\n        </div>\\n        <div class='face shadow-lg rounded-circle'>\\n            <svg [attr.height]=\\\"height\\\" [attr.width]=\\\"width\\\" viewBox=\\\"0 0 169.075 244.640\\\">\\n                <use [attr.href]=\\\"'assets/svg-cards-indented.svg#' + card\\\" />\\n            </svg>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { trigger, state, style, animate, transition } from '@angular/animations';\n\n@Component({\n  selector: 'svg-card',\n  templateUrl: './svg-cards.component.html',\n  styles: [\n    `\n    .svgcard{\n      transform-style: preserve-3d;\n      perspective: 600px;\n      position: relative;\n    }\n    .face{\n      backface-visibility: hidden;\n    }\n    .back{\n      position: absolute;\n      backface-visibility: hidden;\n      transform: rotateY(180deg);\n    }\n    `\n  ],\n      animations: [\n        trigger('flipState', [\n          state('face', style({\n            transform: 'rotateY(-180deg)'\n          })),\n          state('back', style({\n            transform: 'rotateY(0deg)'\n          })),\n          transition('face => back', animate('1000ms ease-in')),\n          transition('back => face', animate('1000ms ease-out'))\n        ])  \n      ]\n})\nexport class CardComponent implements OnInit, OnChanges {\n\n  @Input() card: string = 'spade_1';\n  @Input() fill: string = 'darkred';\n  @Input() scale: number = 1;\n  @Input() state: string = 'face';\n  @Input() back: string = 'back';\n  private width: number;\n  private height: number;\n\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n  ngOnChanges() {\n    this.height = this.scale * 244.640;\n    this.width = this.scale * 169.075;\n  }\n  toggleState() {\n    this.state = this.state === 'back' ? 'face' : 'back';\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { CardComponent } from './svg-cards.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CardComponent\r\n  ],\r\n  imports: [\r\n      CommonModule,\r\n      BrowserAnimationsModule\r\n  ],\r\n  providers: [],\r\n  exports: [CardComponent]\r\n})\r\nexport class SVGCardsModule { }","module.exports = \"<div class='container jumbotron shadow-lg' id=\\\"dropdown\\\">\\n  <div class=\\\"row justify-content-center mt-2\\\">\\n      <button class='btn btn-primary m-1' (click)='getCard()'>Get Card</button>\\n      <button class='btn btn-warning m-1' (click)='toggleBack()'>Toggle Back Type</button>\\n      <button class='btn btn-warning m-1' (click)='toggleFace()'>Toggle Back/Face</button>\\n      \\n      <button class='btn btn-danger m-1' (click)='resetCards()'>Reset Deck</button>\\n\\n    <div class=\\\"input-group input-group mb-3\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n        <span class=\\\"input-group-text backfill\\\"> Back Fill </span>\\n      </div>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]='fill' />\\n    </div>\\n\\n    <div class=\\\"input-group input-group mb-3\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n        <span class=\\\"input-group-text text-center cardscale\\\"> Card Scale </span>\\n      </div>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" step=\\\".125\\\" type=\\\"number\\\" [(ngModel)]='scale' />\\n    </div>\\n\\n    <div class=\\\"input-group input-group mb-3\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n        <button class=\\\"btn btn-warning decksize\\\" type=\\\"button\\\" (click)='setSize()'>\\n          <h3>Deck Size</h3>\\n        </button>\\n      </div>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" step=\\\"5\\\" max=\\\"500\\\" onwheel type=\\\"number\\\" [(ngModel)]='deckSize' />\\n    </div>\\n\\n\\n  </div>\\n\\n</div>\\n<div class=\\\"row\\\">\\n\\n  <svg-card *ngFor='let card of deck' class='col m-2' [scale]='scale' [card]='card' [fill]='fill' [state]='state' [back]='back'></svg-card>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { DeckService } from './svg-deck.service';\n\n@Component({\n  selector: 'svg-deck',\n  templateUrl: './svg-deck.component.html',\n  styles: [`\n    .backfill, .cardscale, .decksize {\n      width: 10rem;\n    }\n    #dropdown {\n      height: 2vh;\n\n      padding-bottom: 0px;\n      padding-top: 20px;\n      overflow: hidden;\n      transition: all 1s ease-out;\n    }\n    #dropdown:hover { \n      height: 25vh;\n      padding: 30px;\n    }\n  `]\n})\nexport class DeckComponent implements OnInit {\n\n  //default values set for inputs\n  @Input() scale: number = 1;\n  @Input() fill: string = 'red';\n  @Input() state: string = 'face';\n  @Input() back: string = 'back';\n  @Input() deckSize: number = 15;\n\n  //deck array of current cards in the component\n  private deck = [];\n\n  //DeckService injected\n  constructor(private _deckService: DeckService) { }\n\n  ngOnInit() {\n    //get cards from deck service\n    this._deckService.dealCard.subscribe(data => this.deck.push(data),\n      error => console.log(error));\n\n    //sends scale/fill/deckSize to the service\n    this.setScale();\n    this.setFill();\n    this.setSize();\n\n    //subscribes to the deck service\n    this._deckService.scale.subscribe(data => this.scale = data,\n      error => console.log(error));\n    this._deckService.deckSize.subscribe(data => this.deckSize = data,\n      error => console.log(error));\n    this._deckService.fill.subscribe(data => this.fill = data,\n      error => console.log(error));\n\n  }\n\n  //sets the deckSize in the service and gets random cards\n  setSize() {\n    if (this.deckSize > 1000) { return; }\n    this.resetCards()\n    this._deckService.setDeckSize(this.deckSize);\n    setTimeout(() => {\n      console.log(this.deckSize);\n      for (let index = 0; index < this.deckSize; index++) {\n        this.getCard();\n      }\n    }, 500);\n  }\n\n  //toggles between back and alternative-back\n  toggleBack() {\n    if (this.back == 'back') {\n      this.back = 'alternate-back';\n    } else {\n      this.back = 'back';\n    }\n  }\n  //toggles the face or back animation state\n  toggleFace() {\n    if (this.state == 'face') {\n      this.state = 'back';\n    } else {\n      this.state = 'face';\n    }\n  }\n  getCard() {\n    this._deckService.getCard();\n  }\n  setScale() {\n    this._deckService.setScale(this.scale);\n  }\n  setFill() {\n    this._deckService.setFill(this.fill);\n  }\n  resetCards() {\n    this.deck = [];\n  }\n}","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { SVGCardsModule } from '../svg-cards/svg-cards.module';\n\nimport { DeckService } from './svg-deck.service';\nimport { DeckComponent } from './svg-deck.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SVGCardsModule,\n    FormsModule\n  ],\n  declarations: [\n    DeckComponent\n  ],\n  exports: [DeckComponent]\n})\nexport class DeckModule { \n  static forRoot(): ModuleWithProviders{\n    return {\n      ngModule: DeckModule,\n      providers: [DeckService]\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeckService {\n  //BehaviourSubjects and Observables\n  private localCard = new BehaviorSubject<string>('');\n  public dealCard = this.localCard.asObservable();\n  private localScale = new BehaviorSubject<number>(0);\n  public scale = this.localScale.asObservable();\n  private localFill = new BehaviorSubject<string>('');\n  public fill = this.localFill.asObservable();\n  private localDeckSize = new BehaviorSubject<number>(0);\n  public deckSize = this.localDeckSize.asObservable();\n\n  //deck array to grab with SVG USE\n  private deck: string[];\n  private cards = {\n    suit: ['club', 'diamond', 'heart', 'spade'],\n    rank: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 'jack', 'queen', 'king']\n  }\n\n  //deck array created in constructor\n  constructor() {\n    this.createDeck();\n  }\n\n  //sets the number of cards to be drawn\n  setDeckSize(number: number) {\n    this.localDeckSize.next(number);\n  }\n\n  //set scale of the cards keeping ratio in tact\n  setScale(value: number) {\n    this.localScale.next(value);\n  }\n\n  //sets the color fill for the back side of the card\n  setFill(fill: string) {\n    this.localFill.next(fill)\n  }\n\n  //draws a random card out of the deck array\n  getCard() {\n    this.localCard.next(this.deck[Math.floor(Math.random() * 52)]);\n  }\n\n  //creates the deck array\n  createDeck() {\n    this.deck = [];\n    for (let suit of this.cards.suit) {\n      for (let rank of this.cards.rank) {\n        this.deck.push(suit + '_' + rank);\n      }\n    }\n    this.deck.push('joker_black');\n    this.deck.push('joker_red');\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}